{"version":3,"sources":["components/Header/Header.js","components/Footer/Footer.js","components/Main/Main.js","components/Membership/Membership.js","components/Committee/Committee.js","components/Contacts/Contacts.js","components/Subjects/Subjects.js","components/Faq/Faq.js","components/Guests/Guests.js","App.js","index.js"],"names":["Navbar","expand","variant","Container","Brand","as","Link","to","src","width","alt","Toggle","aria-controls","Collapse","id","Nav","className","Item","NavLink","exact","activeClassName","year","Date","getFullYear","rel","href","target","aria-label","height","Fragment","Jumbotron","fluid","role","Row","Col","md","schema","Yup","firstName","required","lastName","email","UoMStudent","studentNumber","when","is","then","otherwise","course","international","graduate","over18","inPerson","recaptcha","useState","showAlert","setShowAlert","alertVariant","setAlertVariant","alertMessage","setAlertMessage","Helmet","name","content","initialValues","validationSchema","onSubmit","values","actions","utcDate","toUTCString","formData","FormData","set","fetch","method","body","response","resetForm","catch","error","setSubmitting","validateOnMount","errors","handleChange","handleBlur","handleSubmit","isSubmitting","setFieldValue","submitCount","Form","noValidate","Group","lg","controlId","Label","Control","type","placeholder","value","onChange","onBlur","isInvalid","Feedback","Check","custom","label","checked","disabled","sitekey","render","onloadCallback","console","log","verifyCallback","res","expiredCallback","Button","Spinner","animation","size","aria-hidden","Alert","onClose","dismissible","props","useEffect","committee","Tabletop","init","key","simpleSheet","prettyColumnNames","wanted","data","setCommittee","map","member","img","toString","subject","message","xl","rows","levelFilter","setLevelFilter","codeFilter","setCodeFilter","subjects","Subjects","elements","reviews","Reviews","forEach","filter","review","subjectcode","code","sort","a","b","setSubjects","InputGroup","Prepend","ToggleButtonGroup","ToggleButton","event","length","level","Card","Header","handbooklink","Body","dangerouslySetInnerHTML","__html","text","title","author","panelIndex","setPanelIndex","CustomToggle","children","eventKey","customOnClick","useAccordionToggle","customClass","block","onClick","faq","setFaq","Accordion","defaultActiveKey","entry","question","answer","guests","setGuests","reverse","guest","linkedin","position","url","company","bio","companyinfo","recording","controls","path","Contacts","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ca86f4e2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { Navbar, Container, Nav } from 'react-bootstrap';\r\n\r\nexport default () =>\r\n  <header>\r\n    <Navbar expand=\"lg\" variant=\"light\">\r\n      <Container>\r\n        <Navbar.Brand as={Link} to=\"/\">\r\n          <img\r\n            src=\"img/logo.svg\"\r\n            width=\"200\"\r\n            alt=\"MUBES logo\"\r\n          />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"ml-auto\" as=\"ul\">\r\n              <Nav.Item as=\"li\">\r\n                <Nav.Link as={NavLink} exact to=\"/\" activeClassName=\"active\">Home</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item as=\"li\">\r\n                <Nav.Link as={NavLink} exact to=\"/membership\" activeClassName=\"active\">Membership</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item as=\"li\">\r\n                <Nav.Link as={NavLink} exact to=\"/committee\" activeClassName=\"active\">Committee</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item as=\"li\">\r\n                <Nav.Link as={NavLink} exact to=\"/contacts\" activeClassName=\"active\">Contacts</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item as=\"li\">\r\n                <Nav.Link as={NavLink} exact to=\"/subjects\" activeClassName=\"active\">Subjects</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item as=\"li\">\r\n                <Nav.Link as={NavLink} exact to=\"/faq\" activeClassName=\"active\">FAQ</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item as=\"li\">\r\n                <Nav.Link as={NavLink} exact to=\"/guests\" activeClassName=\"active\">Guests</Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  </header>  \r\n","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nimport './Footer.scss';\r\n\r\nexport default () => {\r\n  const date = new Date();\r\n  const year = date.getFullYear();\r\n\r\n  return (\r\n    <footer className=\"pt-4 pb-2 bg-light\">\r\n      <Container>\r\n        <ul className=\"social list-inline text-center\">\r\n          <li className=\"list-inline-item mr-3\">\r\n            <a rel=\"noopener noreferrer\" href=\"https://www.facebook.com/groups/mubes.unimelb/\" target=\"_blank\" aria-label=\"Follow us on Facebook\">\r\n              <img\r\n                src=\"img/facebook.svg\"\r\n                width=\"40\"\r\n                height=\"40\"\r\n                alt=\"Facebook logo\"\r\n              />\r\n            </a>\r\n          </li>\r\n          <li className=\"list-inline-item mr-3\">\r\n            <a rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/company/mu-bmes/about/\" target=\"_blank\" aria-label=\"Follow us on LinkedIn\">\r\n              <img\r\n                src=\"img/linkedin.svg\"\r\n                width=\"40\"\r\n                height=\"40\"\r\n                alt=\"LinkedIn logo\"\r\n              />\r\n            </a>\r\n          </li>\r\n          <li className=\"list-inline-item\">\r\n            <a rel=\"noopener noreferrer\" href=\"https://www.instagram.com/mubes_unimelb/\" target=\"_blank\" aria-label=\"Follow us on Instagram\">\r\n              <img\r\n                src=\"img/instagram.svg\"\r\n                width=\"40\"\r\n                height=\"40\"\r\n                alt=\"Instagram logo\"\r\n              />\r\n            </a>\r\n          </li>\r\n        </ul>\r\n        <span className=\"d-block text-muted text-center\">&copy; 2014-{year} Melbourne University Biomedical Engineering Society</span>\r\n        <span className=\"d-block text-muted text-center\">Made with <span className=\"text-danger\">&#9829;</span> by <a className=\"text-decoration-none\" rel=\"noopener noreferrer\" href=\"https://github.com/igoresso\" target=\"_blank\">@igoresso</a></span>\r\n      </Container>\r\n    </footer>\r\n  )\r\n}\r\n  \r\n  ","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Jumbotron, Container, Row, Col } from 'react-bootstrap';\n\nimport './Main.scss';\n\nexport default () => {\n  return (\n    <React.Fragment>\n      <Jumbotron fluid>\n        <Container>\n          <h1 className=\"display-4\">Welcome to the Melbourne University Biomedical Engineering Society!</h1>\n          <p className=\"lead\">We encourage and support Biomedical Engineering students and those interested in the field</p>\n          <Link to=\"/membership\" className=\"btn btn-primary btn-lg\" role=\"button\">Join now</Link>\n        </Container>\n      </Jumbotron>\n      <section>\n        <h2 className=\"page-title text-center p-2\">What can I do after finishing Biomedical Engineering major?</h2>\n        <Container>\n          <Row className=\"py-4\">\n            <Col md={4} className=\"p-5 p-md-3 text-center\">\n              <img src=\"img/rocket.svg\" alt=\"Rocket\" />\n            </Col>\n            <Col md={8} className=\"pl-md-5 d-md-flex flex-column justify-content-center\">\n            <h3 className=\"h3 text-center text-md-left\">Launch your own biomedical startup</h3>\n              <p className=\"lead text-center text-md-left\"> Masters of Biomedical Engineering has more subjects where you are given a chance to build your own devices. Check out <a rel=\"noopener noreferrer\" href=\"https://endeavour.unimelb.edu.au/success-stories/navi-technologies\" target=\"_blank\">Navi Technologies</a> and <a rel=\"noopener noreferrer\" href=\"https://eng.unimelb.edu.au/ingenium/graduate-success-stories/biomedical-engineering-startup-stelect-wins-medtechs-got-talent\" target=\"_blank\">Stelect</a> startups co-founded by our alumni!</p>\n            </Col>\n          </Row>\n        </Container>\n        <div className=\"bg-light\">\n          <Container>\n            <Row className=\"py-4 flex-md-row-reverse\">\n              <Col md={4} className=\"p-5 p-md-3 text-center\">\n                <img src=\"img/blood.svg\" alt=\"Blood cells\" />\n              </Col>\n              <Col md={8} className=\"pl-md-5 d-md-flex flex-column justify-content-center\">\n                <h3 className=\"text-center text-md-left\">Deep dive into research</h3>\n                <p className=\"lead text-center text-md-left\">Start with an honours year in a lab of your choice - both academic and research institutes. Get involved in research internships.</p>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n        <Container>\n          <Row className=\"py-4\">\n            <Col md={4} className=\"p-5 p-md-3 text-center\">\n              <img src=\"img/team.svg\" alt=\"Team\" />\n            </Col>\n            <Col md={8} className=\"pl-md-5 d-md-flex flex-column justify-content-center\">\n            <h3 className=\"h3 text-center text-md-left\">Join industry as an engineer</h3>\n              <p className=\"lead text-center text-md-left\">You are doing an engineering degree accredited by the Engineers Australia. The program gives you problem solving and interpersonal skills which are in high demand and can be used in any engineering field.</p>\n            </Col>\n          </Row>\n        </Container>\n      </section>\n    </React.Fragment>\n  )\n}\n","import React, { useState } from 'react';\nimport { Formik } from 'formik';\nimport Recaptcha from 'react-recaptcha';\nimport * as Yup from 'yup';\nimport { Helmet } from 'react-helmet';\nimport { Container, Form, Col, Button, Spinner, Alert } from 'react-bootstrap';\n\nimport './Membership.scss';\n\nconst schema = Yup.object({\n  firstName: Yup.string().required(\"Please enter your first name\"),\n  lastName: Yup.string().required(\"Please enter your last name\"),\n  email: Yup.string().email(\"Please enter a valid email\").required(\"Please enter your email\"),\n  UoMStudent: Yup.string().required(),\n  studentNumber: Yup.number().when('UoMStudent', {\n    is: 'yes',\n    then: Yup.number(\"Please enter a valid student number\").required(\"Please enter your student number\"),\n    otherwise: Yup.number()\n  }),\n  course: Yup.string().when('UoMStudent', {\n    is: 'yes',\n    then: Yup.string(\"Please enter a valid course\").required(\"Please enter your course name\"),\n    otherwise: Yup.string()\n  }),\n  international: Yup.string().when('UoMStudent', {\n    is: 'yes',\n    then: Yup.string().required(),\n    otherwise: Yup.string()\n  }),\n  graduate: Yup.string().when('UoMStudent', {\n    is: 'yes',\n    then: Yup.string().required(),\n    otherwise: Yup.string()\n  }),\n  over18: Yup.string().required(),\n  inPerson: Yup.string().required(),\n  recaptcha: Yup.string().required()\n});\n\nexport default () => {\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertVariant, setAlertVariant] = useState(\"\");\n  const [alertMessage, setAlertMessage] = useState(\"\");\n\n  const handleSubmit = (values, actions) => {\n    const date = new Date();\n    const utcDate = date.toUTCString();\n\n    const formData = new FormData();\n    formData.set('timeStamp', utcDate);\n    formData.set('firstName', values.firstName);\n    formData.set('lastName', values.lastName);\n    formData.set('email', values.email);\n    formData.set('UoMStudent', values.UoMStudent);\n    formData.set('studentNumber', values.UoMStudent === \"yes\" ? values.studentNumber : \"N/A\");\n    formData.set('course', values.course === \"yes\" ? values.studentNumber : \"N/A\");\n    formData.set('international', values.international === \"yes\" ? values.studentNumber : \"N/A\");\n    formData.set('graduate', values.graduate === \"yes\" ? values.studentNumber : \"N/A\");\n    formData.set('over18', values.over18);\n    formData.set('inPerson', values.inPerson);\n    formData.set('recaptcha', values.recaptcha);\n\n    const url = \"https://script.google.com/macros/s/AKfycbweNVIGc--YLlFpiAe6ySWJJW9IAsFVDX46AlJu6eciXlwtzLC7/exec\";\n    fetch(url, {\n      method: 'POST',\n      body: formData\n    })\n    .then(response => {\n      actions.resetForm();\n      setAlertVariant(\"success\");\n      setAlertMessage(\"Welcome to our family!\");\n      setShowAlert(true);\n    })\n    .catch(error => {\n      actions.setSubmitting(false)\n      setAlertVariant(\"danger\");\n      setAlertMessage(\"Oh, no! Something went wrong.\");\n      setShowAlert(true);\n    })\n  }\n\n  return (\n    <Container as=\"section\">\n      <Helmet>\n        <title>MUBES - Membership</title>\n        <meta name=\"description\" content=\"Join the MUBES Society to connect with other students, staff and alumni.\" />\n      </Helmet>\n\n      <h1 className=\"page-title mb-5 pt-2 text-center\">Membership</h1>\n      <p>\n        Join us by filling in the form below! Membership fee is $5 and can be paid by cash at any of our events. Follow us on{' '}\n        <a rel=\"noopener noreferrer\" href=\"https://www.facebook.com/groups/mubes.unimelb/\" target=\"_blank\">Facebook</a>,{' '}\n        <a rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/company/mu-bmes/about/\" target=\"_blank\">LinkedIn</a> and{' '}\n        <a rel=\"noopener noreferrer\" href=\"https://www.instagram.com/mubes_unimelb/\" target=\"_blank\">Instagram</a>.\n      </p>\n      <Formik\n        initialValues={{\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\",\n          UoMStudent: \"\",\n          studentNumber: \"\",\n          course: \"\",\n          international: \"\",\n          graduate: \"\",\n          over18: \"\",\n          recaptcha: \"\"\n        }}\n        validationSchema={ schema }\n        onSubmit={ handleSubmit }\n        validateOnMount\n      >\n        {({\n          values,\n          errors,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          setFieldValue,\n          submitCount\n        }) => (\n          <Form className=\"pb-4\" noValidate onSubmit={ handleSubmit }>\n            <Form.Row>\n              <Form.Group as={Col} lg={4} controlId=\"firstName\">\n                <Form.Label>First name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"firstName\"\n                  placeholder=\"John\"\n                  value={ values.firstName }\n                  onChange={ handleChange }\n                  onBlur={ handleBlur }\n                  isInvalid={ submitCount>0 && !!errors.firstName }\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  { errors.firstName }\n                </Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group as={Col} lg={4} controlId=\"lastName\">\n                <Form.Label>Last name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"lastName\"\n                  placeholder=\"Snow\"\n                  value={ values.lastName }\n                  onChange={ handleChange }\n                  onBlur={ handleBlur }\n                  isInvalid={ submitCount>0 && !!errors.lastName }\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  { errors.lastName }\n                </Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group as={Col} lg={4} controlId=\"email\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"email@student.unimelb.edu.au\"\n                  value={ values.email }\n                  onChange={ handleChange }\n                  onBlur={ handleBlur }\n                  isInvalid={ submitCount>0 && !!errors.email }\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  { errors.email }\n                </Form.Control.Feedback>\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Col lg={4}>\n                <Form.Group>\n                  <span>UoM student?</span>\n                  <Form.Check\n                    custom\n                    type=\"radio\"\n                    name=\"UoMStudent\"\n                    value={ values.UoMStudent }\n                    label=\"Yes\"\n                    id=\"UoMStudentYes\"\n                    checked={ values.UoMStudent === 'yes' }\n                    onChange={() => { \n                      setFieldValue('UoMStudent', 'yes')\n                    }}\n                    onBlur={ handleBlur }\n                    isInvalid={ submitCount>0 && !!errors.over18 }\n                  />\n                  <Form.Check\n                    custom\n                    type=\"radio\"\n                    name=\"UoMStudent\"\n                    value={ values.UoMStudent }\n                    label=\"No\"\n                    id=\"UoMStudentNo\"\n                    checked={ values.UoMStudent === 'no' }\n                    onChange={() => {\n                      setFieldValue('UoMStudent', 'no')\n                      setFieldValue('studentNumber', '')\n                      setFieldValue('course', '')\n                      setFieldValue('international', '')\n                      setFieldValue('graduate', '')\n                    }}\n                    onBlur={ handleBlur }\n                    isInvalid={ submitCount>0 && !!errors.over18 }\n                  />\n                </Form.Group>\n              </Col>\n              <Col lg={8}>\n                <Form.Row>\n                  <Form.Group as={Col} lg={6} controlId=\"studentNumber\">\n                    <Form.Label>Student number</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"studentNumber\"\n                      placeholder=\"#######\"\n                      value={ values.studentNumber }\n                      onChange={ handleChange }\n                      onBlur={ handleBlur }\n                      isInvalid={ submitCount>0 && !!errors.studentNumber }\n                      disabled={ values.UoMStudent !== 'yes' }\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      { errors.studentNumber }\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                  <Form.Group as={Col} lg={6} controlId=\"course\">\n                    <Form.Label>UoM Course</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"course\"\n                      placeholder=\"MEng (Biomedical)\"\n                      value={ values.course }\n                      onChange={ handleChange }\n                      onBlur={ handleBlur }\n                      isInvalid={ submitCount>0 && !!errors.studentNumber }\n                      disabled={ values.UoMStudent !== 'yes' }\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      { errors.course }\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                  <Form.Group as={Col} lg={6}>\n                    <span>Are you an international student?</span>\n                    <Form.Check \n                      custom\n                      type=\"radio\"\n                      name=\"international\"\n                      value={ values.international }\n                      label=\"Yes\"\n                      id=\"international\"\n                      checked={ values.international === 'yes' }\n                      onChange={() => {\n                        setFieldValue('international', 'yes')\n                      }}\n                      onBlur={ handleBlur }\n                      isInvalid={ submitCount>0 && !!errors.international }\n                      disabled={ values.UoMStudent !== 'yes' }\n                    />\n                    <Form.Check \n                      custom\n                      type=\"radio\"\n                      name=\"international\"\n                      value={ values.international }\n                      label=\"No\"\n                      id=\"domestic\"\n                      checked={ values.international === 'no' }\n                      onChange={() => {\n                        setFieldValue('international', 'no')\n                      }}\n                      onBlur={ handleBlur }\n                      isInvalid={ submitCount>0 && !!errors.international }\n                      disabled={ values.UoMStudent !== 'yes' }\n                    />\n                  </Form.Group>\n                  <Form.Group as={Col} lg={6}>\n                    <span>Are you a graduate student?</span>\n                    <Form.Check\n                      custom\n                      type=\"radio\"\n                      name=\"graduate\"\n                      value={ values.graduate }\n                      label=\"Yes\"\n                      id=\"postgraduate\"\n                      checked={ values.graduate === 'yes' }\n                      onChange={() => {\n                        setFieldValue('graduate', 'yes')\n                      }}\n                      onBlur={ handleBlur }\n                      isInvalid={ submitCount>0 && !!errors.graduate }\n                      disabled={ values.UoMStudent !== 'yes' }\n                    />\n                    <Form.Check\n                      custom\n                      type=\"radio\"\n                      name=\"graduate\"\n                      value={ values.graduate }\n                      label=\"No\"\n                      id=\"undergraduate\"\n                      checked={ values.graduate === 'no' }\n                      onChange={() => {\n                        setFieldValue('graduate', 'no')\n                      }}\n                      onBlur={ handleBlur }\n                      isInvalid={ submitCount>0 && !!errors.graduate }\n                      disabled={ values.UoMStudent !== 'yes' }\n                    />\n                  </Form.Group>\n                </Form.Row>\n              </Col>\n            </Form.Row>\n            <Form.Group>\n              <span>Are you over 18?</span>\n              <Form.Check\n                custom\n                type=\"radio\"\n                name=\"over18\"\n                value={ values.over18 }\n                label=\"Yes\"\n                id=\"over18\"\n                checked={ values.over18 === 'yes' }\n                onChange={() => {\n                  setFieldValue('over18', 'yes')\n                }}\n                onBlur={ handleBlur }\n                isInvalid={ submitCount>0 && !!errors.over18 }\n              />\n              <Form.Check\n                custom\n                type=\"radio\"\n                name=\"over18\"\n                value={ values.over18 }\n                label=\"No\"\n                id=\"under18\"\n                checked={ values.over18 === 'no' }\n                onChange={() => {\n                  setFieldValue('over18', 'no')\n                }}\n                onBlur={ handleBlur }\n                isInvalid={ submitCount>0 && !!errors.over18 }\n              />\n            </Form.Group>\n            <Form.Group>\n              <span>Are you able to attend in-person events?</span>\n              <Form.Check\n                custom\n                type=\"radio\"\n                name=\"inPerson\"\n                value={ values.inPerson }\n                label=\"Yes\"\n                id=\"inPersonAvailable\"\n                checked={ values.inPerson === 'yes' }\n                onChange={() => { \n                  setFieldValue('inPerson', 'yes')\n                }}\n                onBlur={ handleBlur }\n                isInvalid={ submitCount>0 && !!errors.over18 }\n              />\n              <Form.Check\n                custom\n                type=\"radio\"\n                name=\"inPerson\"\n                value={ values.inPerson }\n                label=\"No\"\n                id=\"inPersonUnavailable\"\n                checked={ values.inPerson === 'no' }\n                onChange={() => {\n                  setFieldValue('inPerson', 'no')\n                }}\n                onBlur={ handleBlur }\n                isInvalid={ submitCount>0 && !!errors.over18 }\n              />\n            </Form.Group>\n            <Recaptcha\n              sitekey=\"6Ldeb9wUAAAAAKDaIIz8AObKkIvDtEY8R4XtvVTW\"\n              render=\"explicit\"\n              onloadCallback={() => console.log('ReCaptcha is ready!')}\n              verifyCallback={ res => setFieldValue('recaptcha', res) }\n              expiredCallback={ res => setFieldValue('recaptcha', \"\") }\n            />\n            <Button type=\"submit\" className=\"mt-2\" disabled={ isSubmitting || errors.recaptcha }>\n              { isSubmitting &&\n                <Spinner\n                  as=\"span\"\n                  animation=\"grow\"\n                  size=\"sm\"\n                  className=\"mr-1\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                />\n              }\n              { isSubmitting ? \"Submitting...\" : \"Submit\" }\n            </Button>\n          </Form>\n        )}\n      </Formik>\n      { showAlert &&\n        <Alert variant={ alertVariant } onClose={ () => setShowAlert(false) } dismissible>\n          { alertMessage }\n        </Alert>\n      }\n    </Container>\n  )\n}\n","import React, { useEffect } from 'react';\r\nimport Tabletop from 'tabletop';\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Container, Spinner } from 'react-bootstrap';\r\n\r\nimport './Committee.scss';\r\n\r\nexport default (props) => {\r\n  const fetchCommittee = () => {\r\n    Tabletop.init( {\r\n      key: 'https://docs.google.com/spreadsheets/d/1Q7lguf-60_rz_F57TpL0hEOmsivKCr_d8B4H7l2dyEs/pubhtml',\r\n      simpleSheet: true,\r\n      prettyColumnNames: false,\r\n      wanted: [\"Committee\"] }\r\n    ).then(data => { \r\n      props.setCommittee(data);\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!props.committee) {\r\n      fetchCommittee();\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Container as=\"section\">\r\n      <Helmet>\r\n        <title>MUBES - Committee</title>\r\n        <meta name=\"description\" content=\"Meet the committee!\" />\r\n      </Helmet>\r\n\r\n      <h1 className=\"page-title mb-5 pt-2 text-center\">Committee</h1>\r\n      { !props.committee ? (\r\n        <div className=\"text-center m-5\">\r\n          <Spinner animation=\"grow\" role=\"status\" variant=\"primary\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </Spinner>\r\n        </div>\r\n      ) : (\r\n        <ul className=\"committee list-unstyled d-sm-flex flex-wrap justify-content-between\">\r\n        { props.committee.map(member =>\r\n          <li className=\"text-center mb-4 mb-sm-5 mx-auto\" key={ member.id.toString() }>\r\n            <img\r\n              src={ member.img ? member.img : \"img/male.png\" }\r\n              alt={ member.name }\r\n              className=\"img-thumbnail rounded-circle mb-3\"\r\n              width=\"200\"\r\n              height=\"200\"\r\n            />\r\n            <h2 className=\"h5 mb-1 px-2\">{ member.name }</h2>\r\n            <span className=\"d-block text-muted text-center px-2\">{ member.role }</span>\r\n          </li>\r\n        )}\r\n        </ul>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n  ","import React, { useState } from 'react';\nimport { Formik } from 'formik';\n//import Recaptcha from 'react-recaptcha';\nimport * as Yup from 'yup';\nimport { Helmet } from \"react-helmet\";\nimport { Container, Form, Row, Col, Button, Spinner, Alert } from 'react-bootstrap';\n\nconst schema = Yup.object({\n  name: Yup.string().required(\"Please enter your name\"),\n  email: Yup.string().email(\"Please enter a valid email\").required(\"Please enter your email\"),\n  subject: Yup.string().required(\"Please enter a subject\"),\n  message: Yup.string().required(\"Please enter your message\"),\n  recaptcha: Yup.string().required()\n});\n\nexport default () => {\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertVariant, setAlertVariant] = useState(\"\");\n  const [alertMessage, setAlertMessage] = useState(\"\");\n\n  const handleSubmit = (values, actions) => {\n    const formData = new FormData();\n    formData.set('name', values.name);\n    formData.set('email', values.email);\n    formData.set('subject', values.subject);\n    formData.set('message', values.message);\n    formData.set('recaptcha', values.recaptcha);\n\n    const url = \"\";\n    fetch(url, {\n      method: 'POST',\n      body: formData\n    })\n    .then(response => {\n      actions.resetForm();\n      setAlertVariant(\"success\");\n      setAlertMessage(\"Thank you for contacting us. We will get back to you soon!\");\n      setShowAlert(true);\n    })\n    .catch(error => {\n      actions.setSubmitting(false)\n      setAlertVariant(\"danger\");\n      setAlertMessage(\"Oh, no! Something is wrong.\");\n      setShowAlert(true);\n    })\n  }\n\n  return (\n    <Container as=\"section\">\n      <Helmet>\n        <title>MUBES - Contacts</title>\n        <meta name=\"description\" content=\"Do you have any questions? Find the answers you're looking for.\" />\n      </Helmet>\n\n      <h1 className=\"page-title mb-5 pt-2 text-center\">Contacts</h1>\n      <p className=\"text-center\">Do you have any questions? Please do not hesitate to contact us directly or fill in the form below. Email:&#160;<a href=\"mailto:info@mubes.club\">mubes.unimelb@gmail.com</a></p>\n      <Row className=\"justify-content-md-center\">\n        <Col lg={6} xl={5}>\n          <Formik\n          initialValues={{\n            name: \"\",\n            email: \"\",\n            subject: \"\",\n            message: \"\",\n            recaptcha: \"\"\n          }}\n          validationSchema={ schema }\n          onSubmit={ handleSubmit }\n          validateOnMount\n        >\n          {({\n            values,\n            errors,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting,\n            setFieldValue,\n            submitCount\n          }) => (\n            <Form className=\"pb-4\" noValidate onSubmit={ handleSubmit }>\n              <Form.Group controlId=\"name\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder=\"John Snow\"\n                  value={ values.name }\n                  onChange={ handleChange }\n                  onBlur={ handleBlur }\n                  isInvalid={ submitCount>0 && !!errors.name }\n                  disabled\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  { errors.name }\n                </Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group controlId=\"email\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"your@email.com\"\n                  value={ values.email }\n                  onChange={ handleChange }\n                  onBlur={ handleBlur }\n                  isInvalid={ submitCount>0 && !!errors.email }\n                  disabled\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  { errors.email }\n                </Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group controlId=\"subject\">\n                <Form.Label>Subject</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"subject\"\n                  value={ values.subject }\n                  onChange={ handleChange }\n                  onBlur={ handleBlur }\n                  isInvalid={ submitCount>0 && !!errors.subject }\n                  disabled\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  { errors.subject }\n                </Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group controlId=\"message\">\n                <Form.Label>Message</Form.Label>\n                <Form.Control\n                  as=\"textarea\" \n                  rows=\"5\"\n                  name=\"message\"\n                  value={ values.message }\n                  onChange={ handleChange }\n                  onBlur={ handleBlur }\n                  isInvalid={ submitCount>0 && !!errors.message }\n                  disabled\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  { errors.message }\n                </Form.Control.Feedback>\n              </Form.Group>\n              {/*\n              <Recaptcha\n                sitekey=\"6Ldeb9wUAAAAAKDaIIz8AObKkIvDtEY8R4XtvVTW\"\n                render=\"explicit\"\n                onloadCallback={() => true}\n                verifyCallback={ res => setFieldValue('recaptcha', res) }\n                expiredCallback={ res => setFieldValue('recaptcha', \"\") }\n              />\n              */}\n              <Button type=\"submit\" className=\"mt-2\" disabled={ isSubmitting || errors.recaptcha }>\n                { isSubmitting &&\n                  <Spinner\n                    as=\"span\"\n                    animation=\"grow\"\n                    size=\"sm\"\n                    className=\"mr-1\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  />\n                }\n                { isSubmitting ? \"Submitting...\" : \"Submit\"}\n              </Button>\n            </Form>\n          )}\n          </Formik>\n          { showAlert &&\n            <Alert variant={ alertVariant } onClose={ () => setShowAlert(false) } dismissible>\n              { alertMessage }\n            </Alert>\n          }\n        </Col>\n      </Row>\n    </Container>\n  )\n}","import React, { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport Tabletop from 'tabletop';\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Container, Spinner, Form, InputGroup, ToggleButtonGroup, ToggleButton, Card } from 'react-bootstrap';\r\n\r\nimport './Subjects.scss';\r\n\r\nexport default (props) => {\r\n  const [levelFilter, setLevelFilter] = useState(\"all\")\r\n  const [codeFilter, setCodeFilter] = useState(\"\");\r\n\r\n  const onLevelChange = value => {\r\n    setLevelFilter(value);\r\n    setCodeFilter(\"\");\r\n  }\r\n\r\n  const onSubjectChange = event => {\r\n    const value = event.target.value;\r\n    setCodeFilter(value);\r\n    setLevelFilter(\"all\");\r\n  }\r\n\r\n  const fetchSubjects = () => {\r\n    Tabletop.init( {\r\n      key: 'https://docs.google.com/spreadsheets/d/1Q7lguf-60_rz_F57TpL0hEOmsivKCr_d8B4H7l2dyEs/pubhtml',\r\n      prettyColumnNames: false,\r\n      wanted: [\"Subjects\", \"Reviews\"] }\r\n    ).then(data => {\r\n      const subjects = data.Subjects.elements;\r\n      const reviews = data.Reviews.elements;\r\n      subjects.forEach(subject =>{\r\n        subject['reviews'] = reviews.filter(review => review.subjectcode === subject.code).sort((a, b) => b.year - a.year);\r\n      })\r\n      props.setSubjects(subjects);\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!props.subjects) {\r\n      fetchSubjects();\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Container as=\"section\">\r\n      <Helmet>\r\n        <title>MUBES - Subjects</title>\r\n        <meta name=\"description\" content=\"MUBES is delighted to present you reviews for Biomedical Engineering major subjects. We hope this information will help you to make an informed choice.\" />\r\n      </Helmet>\r\n\r\n      <h1 className=\"page-title mb-5 pt-2 text-center\">Subjects</h1>\r\n      <p>Melbourne University Biomedical Engineering Society is delighted to present you reviews for Biomedical Engineering major subjects. We hope this will help you to make an informed choice. Subject structure including all assessments can be found in the Handbook. If you have any subject specific questions feel free to{' '}\r\n        <Link to=\"/contacts\">contact us</Link> directly.</p>\r\n      { !props.subjects ? (\r\n        <div className=\"text-center m-5\">\r\n          <Spinner animation=\"grow\" role=\"status\" variant=\"primary\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </Spinner>\r\n        </div>\r\n      ) : (\r\n        <React.Fragment>\r\n          <Form className=\"mb-3\">\r\n            <InputGroup>\r\n              <InputGroup.Prepend as={ ToggleButtonGroup } type=\"radio\" name=\"options\" value={ levelFilter } onChange={ onLevelChange }>\r\n                <ToggleButton value=\"all\">All</ToggleButton>\r\n                <ToggleButton value=\"undergrad\">Undergrad</ToggleButton>\r\n                <ToggleButton value=\"postgrad\">Postgrad</ToggleButton>\r\n              </InputGroup.Prepend>\r\n              <Form.Control as=\"select\" value={ codeFilter } onChange={ onSubjectChange }>\r\n                <option value=\"\">Select subject</option>\r\n                { props.subjects\r\n                    .filter(subject => subject.reviews.length > 0)\r\n                    .map(subject => <option value={ subject.code } key={ subject.id }>{ `${subject.code} - ${subject.name}` }</option>) }\r\n              </Form.Control>\r\n            </InputGroup>\r\n          </Form>\r\n          { props.subjects.filter(subject => \r\n            (levelFilter === \"all\" && codeFilter === \"\") ||\r\n            (levelFilter === \"all\" && subject.code === codeFilter) ||\r\n            (codeFilter === \"\" && subject.level === levelFilter)\r\n          ).filter(subject => subject.reviews.length > 0)\r\n            .map(subject => \r\n            <Card className=\"mb-4\" key={ subject.id }>\r\n              <Card.Header>\r\n                <h2 className=\"h4 m-0\">{ `${subject.code} - ${subject.name}` }</h2>\r\n                <a rel=\"noopener noreferrer\" href={ subject.handbooklink } target=\"_blank\">Handbook</a>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <h3 className=\"h5\">Reviews</h3>\r\n                { subject.reviews.map(review =>\r\n                  <blockquote className=\"blockquote mb-5\" key={ review.id }>\r\n                    <div dangerouslySetInnerHTML={{ __html: review.text }} />\r\n                    <footer className=\"blockquote-footer\">\r\n                      <cite title={ review.author }>{ review.author } ({ review.year })</cite>\r\n                    </footer>\r\n                  </blockquote>\r\n                )}\r\n              </Card.Body>\r\n            </Card>\r\n          )}\r\n        </React.Fragment>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n  ","import React, { useState, useEffect } from 'react';\r\nimport Tabletop from 'tabletop';\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Container, Spinner, Accordion, Card, Button, useAccordionToggle } from 'react-bootstrap';\r\n\r\nimport './Faq.scss'\r\n\r\nexport default (props) => {\r\n  const [panelIndex, setPanelIndex] = useState(\"1\");\r\n\r\n  const CustomToggle = ({ children, eventKey }) => {\r\n    const customOnClick = useAccordionToggle(eventKey, () => {\r\n      setPanelIndex( eventKey === panelIndex ? null : eventKey )\r\n    })\r\n\r\n    const customClass = (eventKey === panelIndex) ? \"pr-4 text-left\" : \"pr-4 text-left collapsed\"\r\n\r\n    return (\r\n      <Button variant=\"link\" block className={ customClass } onClick={ customOnClick }>\r\n        { children }\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  const fetchFaq = () => {\r\n    Tabletop.init( {\r\n      key: 'https://docs.google.com/spreadsheets/d/1Q7lguf-60_rz_F57TpL0hEOmsivKCr_d8B4H7l2dyEs/pubhtml',\r\n      simpleSheet: true,\r\n      prettyColumnNames: false,\r\n      wanted: [\"FAQ\"] }\r\n    ).then(data => { \r\n      props.setFaq(data);\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!props.faq) {\r\n      fetchFaq();\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Container as=\"section\">\r\n      <Helmet>\r\n        <title>MUBES - FAQ</title>\r\n        <meta name=\"description\" content=\"Find the answers to frequently asked questions.\" />\r\n      </Helmet>\r\n\r\n      <h1 className=\"page-title mb-5 pt-2 text-center\">FAQ &amp; Answers</h1>\r\n      { !props.faq ? (\r\n        <div className=\"text-center m-5\">\r\n          <Spinner animation=\"grow\" role=\"status\" variant=\"primary\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </Spinner>\r\n        </div>\r\n      ) : (\r\n        <Accordion defaultActiveKey=\"1\" className=\"mb-4\">\r\n          { props.faq.map(entry => \r\n            <Card className=\"border rounded mb-1\" key={ entry.id }>\r\n              <Card.Header className=\"p-2 pr-3\">\r\n                <CustomToggle eventKey={ entry.id.toString() }>\r\n                  { entry.question }\r\n                </CustomToggle> \r\n              </Card.Header>\r\n              <Accordion.Collapse eventKey={entry.id.toString()}>\r\n                <Card.Body dangerouslySetInnerHTML={{ __html: entry.answer }} />\r\n              </Accordion.Collapse>\r\n          </Card>\r\n          )}\r\n        </Accordion>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n  ","import React, { useEffect } from 'react';\nimport Tabletop from 'tabletop';\nimport ReactAudioPlayer from 'react-audio-player';\nimport { Helmet } from \"react-helmet\";\nimport { Container, Spinner } from 'react-bootstrap';\n\nimport './Guests.scss';\n\nexport default (props) => {\n  const fetchGuests = () => {\n    Tabletop.init( {\n      key: 'https://docs.google.com/spreadsheets/d/1Q7lguf-60_rz_F57TpL0hEOmsivKCr_d8B4H7l2dyEs/pubhtml',\n      simpleSheet: true,\n      prettyColumnNames: false,\n      wanted: [\"Guests\"] }\n    ).then(data => { \n      props.setGuests(data.reverse());\n    })\n  }\n\n  useEffect(() => {\n    if (!props.guests) {\n      fetchGuests();\n    }\n  })\n\n  return (\n    <Container as=\"section\">\n      <Helmet>\n        <title>MUBES - Event Guests</title>\n        <meta name=\"description\" content=\"Get to know our event guests!\" />\n      </Helmet>\n\n      <h1 className=\"page-title mb-5 pt-2 text-center\">Event Guests</h1>\n      { !props.guests ? (\n        <div className=\"text-center m-5\">\n          <Spinner animation=\"grow\" role=\"status\" variant=\"primary\">\n            <span className=\"sr-only\">Loading...</span>\n          </Spinner>\n        </div>\n      ) : (\n        <ul className=\"guests list-unstyled\">\n        { props.guests.map(guest =>\n          <li className=\"d-md-flex align-items-start mb-5\" key={ guest.id.toString() }>\n            <img\n              src={ guest.img ? guest.img : \"img/male.png\" }\n              alt={ guest.name }\n              className=\"d-block rounded flex-shrink-0 mx-auto mr-md-4 mb-2\"\n              width=\"200\"\n            />\n            <div className=\"d-flex flex-column align-items-center align-items-md-start\">\n              <h2 className=\"h3 mb-1\">{ guest.name }\n                { guest.linkedin &&\n                  <a className=\"guests__link ml-2\" rel=\"noopener noreferrer\" href={ guest.linkedin } target=\"_blank\" aria-label={ \"Follow \" + guest.name + \" on LinkedIn\" }>\n                  <img\n                    className=\"align-baseline\"\n                    src=\"img/linkedin.svg\"\n                    width=\"25\"\n                    height=\"25\"\n                    alt=\"LinkedIn logo\"\n                  />\n                </a>\n                }\n              </h2>\n              <span className=\"d-block text-muted text-center text-md-left mb-3\">{ guest.position } at <a rel=\"noopener noreferrer\" href={ guest.url } target=\"_blank\">{ guest.company }</a></span>\n              <p>{ guest.bio }</p>\n              { guest.companyinfo &&\n                <React.Fragment>\n                  <h3 className=\"h5\">About Company</h3>\n                  <p>{ guest.companyinfo }</p>\n                </React.Fragment>\n              }\n              { guest.recording &&\n                <React.Fragment>\n                  <h3 className=\"h6\">Event Recording</h3>\n                  <ReactAudioPlayer\n                    src={ guest.recording }\n                    controls\n                  />\n                </React.Fragment>\n              }\n            </div>\n          </li>\n        )}\n        </ul>\n      )}\n    </Container>\n  );\n}\n  ","import React, { useState } from 'react';\nimport { Helmet } from \"react-helmet\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { Header, Footer, Main, Membership, Committee, Contacts, Subjects, Faq, Guests } from './components';\n\nimport './App.scss';\n\nexport default () => {\n  const [committee, setCommittee] = useState(null);\n  const [subjects, setSubjects] = useState(null);\n  const [faq, setFaq] = useState(null);\n  const [guests, setGuests] = useState(null);\n\n  return (\n    <Router>\n      <Helmet>\n        <title>MUBES - Melbourne University Biomedical Engineering Society</title>\n        <meta name=\"description\" content=\"Melbourne University Biomedical Engineering Society is a student club that aims to connect students with alumni, faculty, industry, and each other.\" />\n      </Helmet>\n\n      <Header/>\n      <main>\n        <Switch>\n          <Route exact path=\"/\">\n            <Main />\n          </Route>\n          <Route exact path=\"/membership\">\n            <Membership />\n          </Route>\n          <Route exact path=\"/committee\">\n            <Committee committee={ committee } setCommittee={ setCommittee } />\n          </Route>\n          <Route exact path=\"/contacts\">\n            <Contacts />\n          </Route>\n          <Route exact path=\"/subjects\">\n            <Subjects subjects={ subjects } setSubjects={ setSubjects } />\n          </Route>\n          <Route exact path=\"/faq\">\n            <Faq faq={ faq } setFaq={ setFaq }/>\n          </Route>\n          <Route exact path=\"/guests\">\n            <Guests guests={ guests } setGuests={ setGuests }/>\n          </Route>\n          <Redirect to=\"/\" />\n        </Switch>\n      </main>\n      <Footer />\n    </Router>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './bootstrap.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}